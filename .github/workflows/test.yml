name: test
on:
  push:

env:
  MAIN_PYTHON_VERSION: '3.12'
  DOCUMENTATION_CNAME: ansys.github.io/allie-flowkit-python
  PACKAGE_NAME: allie-flowkit-python

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  binaries:
    name : Create binaries
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.MAIN_PYTHON_VERSION }}

    - name: Install dependencies
      run: pip install .[all]

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Set OS name
      id: os_name
      run: echo "os_short=$(echo '${{ matrix.os }}' | sed 's/-latest//')" >> $GITHUB_OUTPUT

    - name: Attempt to build executable
      id: first-attempt
      run: >
        pyinstaller src/allie/flowkit/__main__.py --onefile
        --name ${{ github.event.repository.name }}-test-${{ steps.os_name.outputs.os_short }}
        --copy-metadata ${{ github.event.repository.name }}
        --hidden-import uvicorn --collect-all uvicorn
        --distpath build/dist --workpath build/build --specpath build
      continue-on-error: true
    
    - name: Modify spec file and retry build
      if: steps.first-attempt.outcome == 'failure'
      run: |
        echo "import sys ; sys.setrecursionlimit(sys.getrecursionlimit() * 5)" >> ${{ github.event.repository.name }}-test-${{ steps.os_name.outputs.os_short }}.spec
        pyinstaller ${{ github.event.repository.name }}-test-${{ steps.os_name.outputs.os_short }}.spec
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-binaries
        path: build/dist/${{ github.event.repository.name }}-*

  sign-windows-binary:
    name: Sign Windows binary
    needs: [binaries]
    runs-on:
        group: ansys-network
        labels: [self-hosted, Windows, signtool]
    steps:
      - name: Checkout the SignTool
        uses: actions/checkout@v4
        with:
            repository: ansys-internal/signtool-ansys-apps
            token: ${{ secrets.SIGNTOOL_ACCESS_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
            name: windows-latest-binaries
            path: signtool/installer

      - name: List current structure
        run: ls -R

      - name: Sign application
        working-directory: signtool
        run: |
            $filename = (get-ChildItem installer -recurse | where {$_.name -like "allie-flowkit-python*"}).Name
            $jobname = $filename -replace ".{4}$"
            .\Ansys.SignClient.exe sign `
            --signUrl https://csign.ansys.com `
            -r gh_signtool_account `
            -s '${{ secrets.SIGNTOOL_PWD }}' `
            -n $jobname `
            -i installer/$filename `
            -o installer/$filename

      - uses: actions/upload-artifact@v4
        with:
            name: windows-latest-binaries-signed
            path: signtool/installer/*.exe
        
    