name: test
on:
  push:

env:
  MAIN_PYTHON_VERSION: '3.12'
  DOCUMENTATION_CNAME: ansys.github.io/allie-flowkit-python
  PACKAGE_NAME: allie-flowkit-python

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  binaries:
    name : Create binaries
    # needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.MAIN_PYTHON_VERSION }}

    - name: Install dependencies
      run: pip install .[all]

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Attempt to build executable
      id: first-attempt
      run: >
        pyinstaller src/allie/flowkit/__main__.py --onefile
        --name ${{ github.event.repository.name }}-test
        --collect-metadata allie-flowkit-python      # keep importlib.metadata working
        --hidden-import uvicorn --collect-all uvicorn  # bring in the runtime server
        --distpath build/dist --workpath build/build --specpath build
      continue-on-error: true

    - name: Modify spec file and retry build
      if: steps.first-attempt.outcome == 'failure'
      run: |
        echo "import sys ; sys.setrecursionlimit(sys.getrecursionlimit() * 5)" >> ${{ github.event.repository.name }}-test.spec
        pyinstaller ${{ github.event.repository.name }}-test.spec

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-binaries
        path: dist/${{ github.event.repository.name }}-*

  sign-windows-binary:
    name: Sign Windows binary
    needs: [binaries]
    runs-on:
      group: ansys-network
      labels: [self-hosted, Windows, signtool]
    steps:
      - name: Call Ansys Sign tool
        uses: ansys-internal/signtool-ansys-apps@main
        with:
          app-artifact: windows-latest-binaries
          signtool-password: ${{ secrets.SIGNTOOL_PWD }}
          signed-artifact-name: windows-latest-binaries-signed